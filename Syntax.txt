########################
# Function Declaration #
########################

# Default Function Declaration

function myFunction(Variables, Arguments) {
    out(Variables, Arguments)
    return Variables;
}

# Async Function Declaration

async function myFunction(Variables, Arguments) {
    out(Variables, Arguments)
    return Variables;
}

########################
# Function Usage       #
########################

# Default Function Usage

myFunction(Variables, Arguments)

# Save the Function return value

static[int] = myFunction(Variables, Arguments)


# Async Function Usage

await myFunction(Variables, Arguments)

# Async Save the Function return value

static[int] myVariable = await myFunction(Variables, Arguments)


########################
# Variable Declaration #
########################

# Variable Declaration

# static -> means that the variable is not going to change
# dynamic -> means that the variable can change (be overwritten etc)

# Example of a static variable declaration
static[int] myVariable = 0

# Example of a dynamic variable declaration
dynamic[int] myVariable = 0

# Can not be overwritten
static[int] myVariable = 0
myVariable = 1
log(myVariable) # this will print: 0

# Can be overwritten
dynamic[int] myVariable = 0
myVariable = 1
log(myVariable) # this will print: 1

########################
# Types                #
########################

# Types

# int -> integer
# float -> floating point number
# string -> string
# bool -> boolean
# any -> any type (usually used for non-static variables)

# Example of a static variable declaration
static[int] myVariable = 0

# Example of a dynamic variable declaration
dynamic[any] myVariable = 0

# Example of a static variable declaration
static[string] myVariable = "Hello World"

# Example of a static variable declaration
static[bool] myVariable = true


########################
# Loops                #
########################

# For Loop

for (static[int] i = 0; i < 10; i++) {
    log(i)
}

# While Loop

dynamic[int] i = 0
while (i < 10) {
    log(i)
    i++
}

########################
# Conditionals         #
########################

# If Statement

if (true) {
    log("This will always be printed")
}

# If Else Statement

if (true) {
    log("This will always be printed")
} else {
    log("This will never be printed")
}

# If Else If Statement

if (true) {
    log("This will always be printed")
} else if (false) {
    log("This will never be printed")
} else {
    log("This will never be printed")
}

########################
# Arrays               #
########################

# Array Declaration

# static -> means that the array is not going to change
static[arr] = myArray[10] # this will create an empty array with 10 slots

# dynamic -> means that the array can change (be overwritten etc)
dynamic[arr] = myArray # this will create an empty array

# Array Usage

# Static Array Usage
static[arr] = myArray[3]

myArray.push(1)
myArray.push(2)
myArray.push(3)
log(myArray[0]) # this will print: 1
log(myArray[1]) # this will print: 2
log(myArray[2]) # this will print: 3

# Or you can declare the array like this
static[arr] = myArray[3]
myArray[0] = 1
myArray[1] = 2
myArray[2] = 3

log(myArray[0]) # this will print: 1
log(myArray[1]) # this will print: 2
log(myArray[2]) # this will print: 3

# Dynamic Array Usage
dynamic[arr] = myArray

myArray.push(1)
myArray.push(2)
myArray.push(3)
log(myArray[0]) # this will print: 1
log(myArray[1]) # this will print: 2
log(myArray[2]) # this will print: 3

# Or you can declare the array like this
dynamic[arr] = myArray
myArray[0] = 1
myArray[1] = 2
myArray[2] = 3
log(myArray[0]) # this will print: 1
log(myArray[1]) # this will print: 2
log(myArray[2]) # this will print: 3

########################
# Objects              #
########################

# Object Declaration

# static -> means that the object is not going to change
static[obj] = myObject {
    myObject.name = "John"
    myObject.age = 25
}
log(myObject.name) # this will print: John

# dynamic -> means that the object can change (be overwritten etc)
dynamic[obj] = myObject
myObject.name = "John"
myObject.age = 25
log(myObject.name) # this will print: John

# Object Usage

# Static Object Usage
static[obj] = myObject {
    myObject.name = "John"
    myObject.age = 25
}
log(myObject.name) # this will print: John

# Dynamic Object Usage
dynamic[obj] = myObject
myObject.name = "John"
myObject.age = 25
log(myObject.name) # this will print: John





